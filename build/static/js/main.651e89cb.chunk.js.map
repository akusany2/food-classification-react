{"version":3,"sources":["header.js","category.js","App.js","reportWebVitals.js","index.js"],"names":["ButtonAppBar","Box","sx","flexGrow","AppBar","position","Toolbar","style","Typography","variant","component","Category","props","useState","category","setCategory","mt","FormControl","fullWidth","InputLabel","id","Select","labelId","value","onChange","event","handleCategory","target","setTimeout","MenuItem","map","i","color","App","theme","createTheme","palette","type","primary","main","secondary","yellow","url","setUrl","prediction","setPrediction","inputError","setInputError","loader","setLoader","categorySelection","setCategorySelection","handleValidation","val","reset","CssBaseline","className","Grid","container","direction","justifyContent","alignItems","src","alt","LinearProgress","Button","size","onClick","htmlFor","FilledInput","aria-describedby","label","e","test","FormHelperText","disabled","preventDefault","console","log","axios","post","then","res","data","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.651e89cb.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Box from '@material-ui/core/Box';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nexport default function ButtonAppBar() {\r\n    return (\r\n        <Box sx={{ flexGrow: 1 }}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar style={{ 'justifyContent': 'center' }} >\r\n\r\n                    <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n                        Food Classification\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </Box>\r\n    );\r\n}\r\n","import { FormControl, Box, MenuItem, Select, InputLabel, Typography } from '@material-ui/core';\r\nimport { useState } from 'react';\r\n\r\nfunction Category(props) {\r\n  var categories = [\r\n    \"Burger\",\r\n    \"Butter Naan\",\r\n    \"Chai\",\r\n    \"Chapati\",\r\n    \"Chole Bhature\",\r\n    \"Dal Makhani\",\r\n    \"Dhokla\",\r\n    \"Fried Rice\",\r\n    \"Idli\",\r\n    \"Jalebi\",\r\n    \"Kaathi Rolls\",\r\n    \"Kadai Paneer\",\r\n    \"Kulfi\",\r\n    \"Masala Dosa\",\r\n    \"Momos\",\r\n    \"Paani Puri\",\r\n    \"Pakode\",\r\n    \"Pav Bhaji\",\r\n    \"Pizza\",\r\n    \"Samosa\",\r\n  ];\r\n  const [category, setCategory] = useState('');\r\n  function handleChange(event) {\r\n    \r\n    props.handleCategory(event.target.value);\r\n    setCategory(event.target.value);\r\n\r\n    setTimeout(() => { setCategory('') }, 2000);\r\n  }\r\n    return (\r\n      <Box mt='5'>\r\n        <br />\r\n        {/* Category selection */}\r\n        {!category && <FormControl fullWidth={ true} component=\"fieldset\">\r\n          <InputLabel id=\"category-select-label\">Select Category</InputLabel>\r\n        <Select\r\n          labelId=\"category-select-label\"\r\n          id=\"category-select\"\r\n          value={category}\r\n          onChange={handleChange}\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          \r\n        \r\n            {categories.map((category, i) => {\r\n            return <MenuItem key={i} value={category}>{category}</MenuItem>})}\r\n          </Select>\r\n        </FormControl>}\r\n\r\n        {category && <Typography variant=\"h3\" style={{ color: '#e64a19' }}>Thank you!</Typography> }\r\n      </Box>\r\n    )\r\n}\r\n\r\nexport default Category;","\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport { Button, CssBaseline, FormControl, FormHelperText, InputLabel, LinearProgress, Grid, Box, createTheme, Typography, FilledInput } from '@material-ui/core';\n\nimport { yellow } from '@material-ui/core/colors';\nimport './App.css';\nimport ButtonAppBar from './header';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport Category from './category';\n\nfunction App() {\n  const theme = createTheme({\n    palette: {\n      type: 'dark',\n      primary: {\n        main: '#e64a19',\n      },\n      secondary: yellow,\n    },\n  });\n  const [url, setUrl] = useState('');\n  const [prediction, setPrediction] = useState('');\n  const [inputError, setInputError] = useState(false);\n  const [loader, setLoader] = useState(false);\n  const [categorySelection, setCategorySelection] = useState(false);\n  const [category, setCategory] = useState('');\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setPrediction('');\n    setLoader(true);\n    console.log(url);\n    axios.post('http://ec2-34-226-205-176.compute-1.amazonaws.com:8000/', { url: url })\n      .then(res => {\n        console.log(res);\n        setPrediction(res.data.prediction);\n        setLoader(false);\n      })\n  }\n  function handleChange(e) {\n    if ((/\\.(gif|jpe?g|tiff?|png|webp|bmp)$/i).test(e.target.value)) {\n      setInputError(false)\n      setUrl(e.target.value);\n      setPrediction('');\n    } else {\n      setInputError(true);\n\n    }\n\n  }\n  function handleValidation(val) {\n    if (val == 'w') {\n      \n      setCategorySelection(true);\n    } else {\n      setCategorySelection(false);\n      reset();\n    }\n  }\n  function handleCategory(val) {\n    setCategory(val);\n    setPrediction('');\n    setTimeout(() => { setCategorySelection(false); reset(); }, 2000);\n  }\n  function reset() {\n    setUrl('');\n    setPrediction('');\n    setInputError(false);\n    setLoader(false);\n  }\n  return (\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline />\n      <ButtonAppBar className=\"App-header\" />\n      <Grid container direction=\"column\"\n        justifyContent=\"center\"\n        alignItems=\"center\">\n        <Box mt={5}>\n\n          {url && <img className='image' src={url} alt=\"url\" />}\n          {loader && <LinearProgress />}\n\n          {prediction && <Box mt={5} justifyContent='center'>\n            <Typography variant=\"h3\" style={{ color: '#e64a19' }}>{prediction}</Typography>\n\n            {/* Validate prediciton */}\n            <Button size='large' id='correct' onClick={() => handleValidation('c')}>Correct</Button>\n\n            <Button size='large' id='wrong' onClick={() => handleValidation('w')}>Wrong</Button>\n          </Box>}\n          {categorySelection && <Category handleCategory={handleCategory}></Category>}\n\n        </Box>\n        <Box mt={5}>\n          \n\n          {/* Main control */}\n          <FormControl>\n            <InputLabel htmlFor=\"url-input\" className='label-url'>URL of Image</InputLabel>\n            <FilledInput id=\"url\" aria-describedby=\"url-helper-text\" label=\"Required\"\n              variant=\"filled\" onChange={handleChange} fullWidth={true} value={ url } />\n            <FormHelperText id=\"url-helper-text\">{\n              inputError ? 'URL is not valid!' : 'The URL should end with proper extension (.jpg/.png/jpeg)'\n            }</FormHelperText>\n            <br />\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              component=\"label\"\n              disabled={inputError}\n              onClick={handleSubmit}\n            >\n              Predict Image\n            </Button>\n          </FormControl>\n\n        </Box>\n        \n      </Grid>\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}